[General]
# General
ipv6 = false
internet-test-url = http://www.gstatic.com/generate_204
proxy-test-url = http://www.gstatic.com/generate_204
test-timeout = 3
show-error-page-for-reject = true
geoip-maxmind-url = https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/Country.mmdb

# External Controller
http-api-web-dashboard = false

# Advanced
loglevel = notify
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, 17.0.0.0/8, localhost, *.local, www.baidu.com,yunbusiness.ccb.com,wxh.wo.cn,gate.lagou.com,www.abchina.com.cn,www.shanbay.com,login-service.mobile-bank.psbc.com,mobile-bank.psbc.com*.crashlytics.com, seed-sequoia.siri.apple.com, sequoia.apple.com
exclude-simple-hostnames = true
use-default-policy-if-wifi-not-primary = false

# DNS
dns-server = 223.5.5.5, 114.114.114.114, 119.29.29.29

[Replica]
hide-apple-request = false
hide-crashlytics-request = true
hide-udp = false
keyword-filter-type = none

[Proxy]
Direct 🔸 = direct
Reject ⛔️ = reject

[Proxy Group]
# Basic group
Proxies_01 = select, policy-path=订阅链接 或 本地文件名.后缀, policy-regex-filter=^((?!(?i)(Direct)).)*$, hidden=1
Proxies_02 = select, policy-path=订阅链接 或 本地文件名.后缀, policy-regex-filter=^((?!(?i)(Direct)).)*$, hidden=1
Proxy ✈️ = select, include-other-group="Proxies_01,Proxies_02"

# Other Group
🍎 Apple = select, Direct 🔸, Proxy ✈️, include-other-group=Proxy ✈️
🎬 Disney = select, Proxy ✈️, Direct 🔸, include-other-group=Proxies_01, policy-regex-filter=(?i)(🇸🇬)|(坡)|(Singapore)|(SG)
🖥 Microsoft = select, Proxy ✈️, Direct 🔸, include-other-group=Proxy ✈️
🎬 Netflix = select, Proxy ✈️, Direct 🔸, include-other-group=Proxies_01, policy-regex-filter=(?i)(🇸🇬)|(坡)|(Singapore)|(SG)
🤖 OpenAI = select, Proxy ✈️, Direct 🔸, include-other-group=Proxies_01, policy-regex-filter=(?i)(🇺🇸)|(美)|(States)|(USA)
🏎️ Speedtest = select, Proxy ✈️, Direct 🔸, include-other-group=Proxy ✈️
🎧 Spotify = select, Proxy ✈️, Direct 🔸, include-other-group=Proxies_01, policy-regex-filter=(?i)(🇺🇸)|(美)|(States)|(USA)
🎮 Steam = select, Proxy ✈️, Direct 🔸, include-other-group=Proxies_01, policy-regex-filter=(?i)(🇯🇵)|(日)|(Japan)|(JP)
📲 Telegram = select, Proxy ✈️, Direct 🔸, include-other-group=Proxy ✈️
📲 TikTok = select, Proxy ✈️, Direct 🔸, include-other-group=Proxies_01, policy-regex-filter=(?i)(🇺🇸)|(美)|(States)|(USA)
🎬 YouTube = select, Proxy ✈️, Direct 🔸, include-other-group=Proxy ✈️
📡 Global = select, Proxy ✈️, Direct 🔸, include-other-group=Proxy ✈️
⏳ Final = select, Proxy ✈️, Direct 🔸, include-other-group=Proxy ✈️

[Rule]
# 将此置于去广告规则之前以免被屏蔽
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Direct/Direct.list, Direct 🔸

# Apple
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list, 🍎 Apple
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleMail/AppleMail.list, 🍎 Apple
# Disney
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list, 🎬 Disney
# Microsoft
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list, 🖥 Microsoft
# Netflix
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list, 🎬 Netflix
# OpenAI
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OpenAI/OpenAI.list, 🤖 OpenAI
# Speedtest
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Speedtest/Speedtest.list, 🏎️ Speedtest
# Spotify
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Spotify/Spotify.list, 🎧 Spotify
# Steam
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Steam/Steam.list, 🎮 Steam
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/SteamCN/SteamCN.list, 🎮 Steam
# Telegram
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Telegram/Telegram.list, 📲 Telegram
# TikTok
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TikTok/TikTok.list, 📲 TikTok
# YouTube
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list, 🎬 YouTube
# Global
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, 📡 Global

# Appstorrent
RULE-SET, https://raw.githubusercontent.com/isLundy/Network-Configuration/main/Surge/Rule/Appstorrent.list, Direct 🔸
# Download
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Download/Download.list, Direct 🔸
# Local Area Network 局域网 以下规则将触发本地 DNS 解析
RULE-SET, LAN, Direct 🔸

# GeoIP 和 ChinaASN 二选一
# RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaASN/ChinaASN_Resolve.list, Direct 🔸
GEOIP, CN, Direct 🔸

# DNS 查询失败走 Final 规则
FINAL, ⏳ Final, dns-failed

[Host]
# Firebase Cloud Messaging
mtalk.google.com = 108.177.125.188

[URL Rewrite]
# Redirect Google Search Service
^(http|https):\/\/(www.)?(g|google)\.cn https://www.google.com 302
# Redirect Google Maps Service
^https?:\/\/(ditu|maps).google\.cn https://maps.google.com 302

[MITM]
# 执行 MITM 时跳过服务端证书验证
skip-server-cert-verify = true
h2 = true
ca-passphrase = 2F8798FC
ca-p12 = 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

[Script]
# 使用 JavaScript 来对修改请求体、响应体、定时执行脚本、特定事件执行脚本、规则判定、policy-group判定、执行DNS解析等
